openapi: 3.1.1
info:
  title: Power Team Health Opportunity Radar API
  version: "1.0.0"
  description: >
    Actions schema for your GPT to search health-industry opportunities and (optionally) push to WhatsApp.

servers:
  - url: https://power-team-radar.vercel.app

paths:
  /api/health:
    get:
      operationId: healthCheck
      summary: Health check for API
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  time:
                    type: string
                    description: ISO timestamp

  /api/opportunities/search:
    post:
      operationId: searchOpportunities
      summary: Search recent health-industry opportunities for Power Team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
            examples:
              basic:
                value:
                  industries: ["corporate wellness","nutrition"]
                  locations: ["Kuala Lumpur","Selangor"]
                  time_range_days: 7
                  limit: 5
                  language: "en"
      responses:
        "200":
          description: List of opportunities
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OpportunityItem"

  /api/opportunities/subscribe:
    post:
      operationId: subscribeRules
      summary: Save subscription rules for scheduled digests (MVP mock)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscribeRequest"
            examples:
              weekly:
                value:
                  power_team: "Health"
                  rule_name: "KL-weekly-health"
                  industries: ["corporate wellness","health screening"]
                  locations: ["Kuala Lumpur"]
                  time_range_days: 7
                  notify_channel: "whatsapp"
                  notify_target: "6016XXXXXXX"
                  send_time_local: "09:00"
                  timezone: "Asia/Kuala_Lumpur"
      responses:
        "200":
          description: Subscription accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  subscription_id:
                    type: string

  /api/notify/whatsapp:
    post:
      operationId: pushWhatsapp
      summary: Push selected opportunities to WhatsApp (mock by default; real via Cloud API if env configured)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotifyRequest"
            examples:
              mock:
                value:
                  items: ["opp_123","opp_456"]
                  recipient: "6016XXXXXXX"
                  template: "POWER_TEAM_BRIEF_V1"
                  mode: "mock"
      responses:
        "200":
          description: Send result
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  count:
                    type: integer
                  recipient:
                    type: string
                  mode:
                    type: string

components:
  schemas:
    SearchRequest:
      type: object
      properties:
        industries:
          type: array
          items: { type: string }
          description: Industry keywords (e.g., corporate wellness, nutrition)
        locations:
          type: array
          items: { type: string }
          description: Cities/States (e.g., Kuala Lumpur, Selangor)
        min_budget_rm:
          type: number
          description: Minimum budget filter (Ringgit)
        language:
          type: string
          enum: [en, ms, zh]
          default: en
        time_range_days:
          type: integer
          default: 7
        limit:
          type: integer
          default: 5
      required: [time_range_days]

    OpportunityItem:
      type: object
      properties:
        id: { type: string }
        title: { type: string }
        summary: { type: string }
        url: { type: string }
        published_at:
          type: string
          format: date-time
        score:
          type: number
          description: 0â€“1 score (higher = better)
        matched_industries:
          type: array
          items: { type: string }
        location: { type: string }
        signals:
          type: array
          items: { type: string }
        suggested_members:
          type: array
          items:
            type: object
            properties:
              name: { type: string }
              specialty: { type: string }
              chapter_role: { type: string }
        opening_line: { type: string }

    SubscribeRequest:
      type: object
      properties:
        power_team: { type: string }
        rule_name: { type: string }
        industries:
          type: array
          items: { type: string }
        locations:
          type: array
          items: { type: string }
        time_range_days: { type: integer }
        notify_channel:
          type: string
          enum: [whatsapp, email, none]
        notify_target: { type: string }
        send_time_local: { type: string }
        timezone:
          type: string
          default: Asia/Kuala_Lumpur
      required: [rule_name, time_range_days]

    NotifyRequest:
      type: object
      properties:
        items:
          type: array
          items: { type: string }
        recipient:
          type: string
          description: "E.g., 6016XXXXXXX"
        template:
          type: string
          description: WhatsApp template name (optional in mock)
        mode:
          type: string
          enum: [mock, real]
          default: mock
      required: [items, recipient]

  # Optional: prepare bearerAuth for future security hardening (not enforced unless you add 'security' at root)
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
